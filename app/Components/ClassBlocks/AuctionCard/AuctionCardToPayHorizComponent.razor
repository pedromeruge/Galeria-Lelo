@using Classes.AuctionCard;
@using Classes.Bids;
@using Classes.Time;
@using System;
@inherits ComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using app.Components.Pages.Menu
@rendermode InteractiveServer

<div class="card-component" @onclick=" () => HandleCardClick(Card.IdLeilao)">
  <div class="left-side">
    @if (UserHighestBidDiff < 0) {
      <p class="outbid-text">OUTBID</p>
    }
    @if (Card.Images.Any()) {
      <img src="@Card.Images.First().Path" class="auction-img" alt="@Card.Images.First().Path">
    }
    else {
      <p class="auction-img">Image not found</p>
    }
  </div>
  <div class="right-side">
    <div class="top-row">
      <div class="info-names">
          <span class="author">
              @Card.Nome_artista -
          </span>
          <span class="name">
              @Card.Prod_nome
          </span>
      </div>
        <div class="time">
          <text>Fim em @Time.BetterPrintDate(Card.DataFim)</text>
        </div>
      </div>
    <div class="bottom-row">
      <div class="left-button-section"> 
        <button class="pagar-button" @onclick:stopPropagation="true" @onclick="MostrarMenuPagar">PAGAR</button> @*impedir propagação do efeito de clicar para o card component!!!*@
      </div>
      <div class="right-bid-text"> 
        <div class="preco-atual">@Card.Maior_licitacao.Valor.ToString("F2") €</div>
        <div class="preco-com-envio"> @finalCost.ToString("F2") € incl.</div>
      </div>
    </div>
  </div>
  	@if (mostrarMenuPagar)
	{
		<PagarLeilaoMenu isVisible=true leilao="Card" CloseCallback="FecharMenuPagar"/>
	}
</div>

<script src="JSscripts/timeUpdater.js"></script>

@code {
  [Parameter, EditorRequired]
  public AuctionCard Card { get; set; } = default!;

  [Parameter]
  public decimal UserHighestBidDiff {get; set;} = 0;
  private decimal finalCost;

  private bool mostrarMenuPagar = false;
  private bool cardClickAccepted = true;
  protected override void OnInitialized()
  {
      finalCost = Card.Maior_licitacao.Valor + Card.Custo_envio;
  }

  private void HandleCardClick(int auctionId) {
    if (cardClickAccepted) {
      NavigateToDetalhesLeilao(auctionId);
    }
    else {
      //do nothing
    }
  }
  private void NavigateToDetalhesLeilao(int auctionId) {
      NavigationManager.NavigateTo($"/AuctionDetailsFinished/{Card.IdLeilao}");
  }

  private void MostrarMenuPagar() {
      mostrarMenuPagar = true;
      cardClickAccepted = false;
  }

  private async void FecharMenuPagar() {
		mostrarMenuPagar = false;
    cardClickAccepted = true;
	}
}
