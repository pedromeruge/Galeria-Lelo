@page "/home"
@layout LoginLayout

@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using DataLayer.Auction
@using Classes.AuctionCard
@using app.Components.ClassBlocks.AuctionCard.Client
@inject IAuctionRepository db
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IUserService UserService
@using Classes.Session

<PageTitle>Galeria Lelo</PageTitle>

@if (cards == null) {
    <p>Loading home page...</p>
}
else {
    <div class="bckg-splashart">
        <img src="pngs/home-bckg-galeria.png" class="home-backg-image" alt="Home background"> 
        <div class="text-container">
            <p class="nome-galeria">GALERIA LELO</p>
            <p class="slogan-galeria">Transforme o belo em seu, e o dinheiro em meu</p>
        </div>
    </div>
    <div class="leiloes">
        <p class="texto-leiloes">Leilões a decorrer</p>
        <div class="grid">
            @foreach (var card in cards) {
                <AuctionCardComponent Card="card" />
            }
        </div>
    </div>
}

@* NOTA:  IEnumberable é lista final que não pode ser modificada != List em que se pode remover e adicionar elementos*@
@code {
	protected override async Task OnAfterRenderAsync(bool firstRender) {
		if (firstRender) {
			// ver se user existe e ta valido
			User user = await localStorage.GetItemAsync<User>("User");
			if (user == null || await UserService.checkUserValid(user) == false) NavigationManager.NavigateTo("/");
			Session session = await localStorage.GetItemAsync<Session>("Session");
			if (session == null || await UserService.checkUserValidSession(user, session) == false) NavigationManager.NavigateTo("/");
		}
	}

    private List<AuctionCard>? cards;
        protected override async Task OnInitializedAsync() {
            cards = await db.FindAllInState(AuctionStatus.em_leilao);
        }
}
