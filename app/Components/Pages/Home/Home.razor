@page "/"
@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using DataLayer.Auction
@using Classes.AuctionCard
@using app.Components.ClassBlocks.AuctionCard
@inject IAuctionRepository db
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IUserService UserService
@using Classes.Session

<PageTitle>Galeria Lelo</PageTitle>

@if (cards == null) {
    <p>Loading home page...</p>
}
else {
    <div class="bckg-splashart">
        <img src="pngs/home-bckg-galeria.png" class="home-backg-image" alt="Home background"> 
        <div class="text-container">
            <p class="nome-galeria">GALERIA LELO</p>
            <p class="slogan-galeria">Transforme o belo em seu, e o dinheiro em meu</p>
        </div>
    </div>
    <div class="leiloes">
        <p class="texto-leiloes">Leilões a decorrer</p>
        <div class="grid">
            @foreach (var card in cards) {
                <AuctionCardComponent Card="card" />
            }
        </div>
    </div>
}

@* NOTA:  IEnumberable é lista final que não pode ser modificada != List em que se pode remover e adicionar elementos*@
@code {
    private List<AuctionCard>? cards;

		protected override async Task OnAfterRenderAsync(bool firstRender) {
			if (firstRender) {
				// ver se user existe e ta valido
				User user = await localStorage.GetItemAsync<User>("User");
				if (user != null) {
					if (await UserService.checkUserValid(user) == true) {
						Session session = await localStorage.GetItemAsync<Session>("Session");

						if (session != null) {
							if (await UserService.checkUserValidSession(user, session) == true) {
								NavigationManager.NavigateTo("/home");
							}
						}
					}
				}
			}
		}

        protected override async Task OnInitializedAsync() {
			try {
				cards = await db.FindAll();
				@* Http.BaseAddress = new Uri(NavigationManager.BaseUri);

				string jsonUrl = "/AuctionCards.json";
				cards = await Http.GetFromJsonAsync<IEnumerable<AuctionCard>>(jsonUrl); *@
				// Print the JSON response (for debugging purposes)
				@* Console.WriteLine($"JSON Response: {JsonSerializer.Serialize(response)}"); *@
			}
			catch (HttpRequestException ex) {
				Console.WriteLine($"There was a problem loading auction cards data: {ex.Message}");
			}
        }
}
