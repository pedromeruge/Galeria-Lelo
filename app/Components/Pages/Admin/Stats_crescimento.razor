@page "/admin/stats_crescimento"
@layout LoginAdminLayout

@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using DataLayer.Auction
@using Classes.AuctionCard
@using app.Components.ClassBlocks.AuctionCard
@inject IAuctionRepository db
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IAdminService AdminService
@using Classes.Admin

<div class="stats_page">
	<div class="stats_buttons">
		<button class="botao_stats" @onclick="StatsVenda">
			Estatísticas
			<br>
			de venda
		</button>
		<button class="botao_stats_pressed" disabled="disabled">
			Estatísticas
			<br>
			de crescimento
		</button>
	</div>
	<form class="date_form" @onsubmit="UpdateData">
		<input class="date_input" type="datetime-local" placeholder="Data início" @bind="DataInicio"/>
		<input class="date_input" type="datetime-local" placeholder="Data fim" @bind="DataFim"/>
		<button class="botao_submit" type="submit">Submeter</button>
	</form>
	<div class="stats_container">
		<p class="stats_text">
			Users novos: @UsersNovos
		</p>
		<p class="stats_text">
			Total logins: @Logins
		</p>
	</div>
</div>


@code {
	private int UsersNovos = 0;
	private int Logins = 0;
	private DateTime DataInicio = DateTime.Now;
	private DateTime DataFim = DateTime.Now;

	protected override async Task OnAfterRenderAsync(bool firstRender) {
		if (firstRender) {
			// ver se user existe e ta valido
			Admin admin = await localStorage.GetItemAsync<Admin>("Admin");
			if (admin == null || await AdminService.checkAdminValid(admin) == false) NavigationManager.NavigateTo("/admin");
			@* Console.WriteLine(await AdminService.getLucroMedioEntre(DateTime.Parse("2022-01-05"), DateTime.Parse("2025-01-10"))); *@
		}
	}

	private async Task StatsVenda() {
		NavigationManager.NavigateTo("/admin/stats_venda");
	}
	private async Task UpdateData() {
		UsersNovos = await AdminService.getNumeroNovosUsersEntre(DataInicio, DataFim);
		Logins = await AdminService.getNumeroLoginsEntre(DataInicio, DataFim);
	}
}
