@inherits ComponentBase
@rendermode InteractiveServer
@using app.Components.Pages.Menu
@using Classes.AuctionCard

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IUserService UserService
@inject IAuctionRepository AuctionService

<div class="menu-overlay" @onclick:stopPropagation="true">
    <div class="menu" @onclick:stopPropagation="true">
        <div class="menu-header">
            <div class="menu-title">
                <div class="menu-header-title">Enviar leilão</div>
                <button class="close-button" @onclick:stopPropagation="true" @onclick="CloseMenu">X</button>
            </div>
            <div class="menu-line"></div>
        </div>
        <div class="menu-body">
            <form class="inputs" @onsubmit="HandleSubmit">
                <div class="meny-body-text">
                    <div class="body-title">Simulação de janela de envio...</div>
                    <p class="body-value">Anexar comprovativo de envio:</p>
                    <InputFile OnChange="HandleFileSelect" class="body-value" multiple/> @* permitir anexar vários ficheiros*@
                </div>
                <button class="input-button" type="submit">ENVIAR</button>
            </form>
        </div>
    </div>
</div>

@code {

	[Parameter]
    public Action? CloseCallback { get; set; }

	[Parameter]
    public AuctionCard leilao {get; set;}

	public void CloseMenu() {
		CloseCallback?.Invoke();
	}

	private async Task HandleSubmit() {
        leilao.Leilao_estado = AuctionStatus.por_entregar;
        AuctionService.Update(leilao);
        CloseMenu();
	}

    async Task HandleFileSelect(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();
        foreach (var file in files)
        {
            @* var stream = file.OpenReadStream(); *@
            Console.WriteLine($"Selected file: {file.Name}");
            // nao se faz nada
        }
    }
}