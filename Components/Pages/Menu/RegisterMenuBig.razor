@inherits ComponentBase
@rendermode InteractiveServer
@using app.Components.ClassBlocks.User


@* TODO O CSS DISTO ESTA EXTREMAMENTE CURSED
tentei organizar mais ou menos, deve dar para aproveitar nos outros menus mas ta
completamnte incompreensivel ilegivel
o botao de fechar nem sequer ta centrado *@
@if (isVisible) {
	<div class="menu-overlay">
		<div class="menu">
			<div class="menu-header">
				<div class="menu-title">
					<div class="menu-header-title">Iniciar sessão ou criar uma conta</div>
					<button class="close-button" @onclick="CloseMenu">X</button>
				</div>
				<div class="menu-line"></div>
				<div class="menu-header-title-light">Estás quase a acabar de criar a tua conta!</div>
				<div class="menu-header-title">Diz-nos a tua morada de entrega</div>
			</div>

			<form class="inputs" @onsubmit="HandleSubmit">
				<input class="input-container" type="text" id="rua_entrega" @bind="user.rua_entrega" placeholder="Rua" required>

				@* para ficarem lado a lado tive de fazer esta div *@
				<div class="two-inputs">
					<input class="input-container-small" type="text" id="cod_entrega" @bind="user.cod_entrega" placeholder="Código Postal" required>

					<input class="input-container-big" type="text" id="cidade_entrega" @bind="user.cidade_entrega" placeholder="Cidade" required>
				</div>

				<div class="menu-header">
					<div class="menu-header-title">Diz-nos a tua morada fiscal</div>
				</div>

				<input class="input-container" type="text" id="rua_fiscal" @bind="user.rua_fiscal" placeholder="Rua" required>

				@* para ficarem lado a lado tive de fazer esta div *@
				<div class="two-inputs">
					<input class="input-container-small" type="text" id="cod_fiscal" @bind="user.cod_fiscal" placeholder="Código Postal" required>

					<input class="input-container-big" type="text" id="cidade_fiscal" @bind="user.cidade_fiscal" placeholder="Cidade" required>
				</div>

				<button class="input-button" type="submit">Registar</button>
			</form>
		</div>
	</div>
}

@code {
	[Parameter]
	public User user { get; set; } = null;

	[Parameter]
	public bool isVisible { get; set; }

	[Parameter]
    public Action? CloseCallback { get; set; }



	public void CloseMenu() {
		isVisible = false;
		CloseCallback?.Invoke();
	}

	private async Task HandleSubmit() {
		@* ........... *@
	}
}

